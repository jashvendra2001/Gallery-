{"ast":null,"code":"import axios from \"axios\";\nimport { useContext } from 'react';\nimport { AppContext } from '../context';\nconst apiKey = \"d158bcf6164dfb926aa8a936e16bc9b8\";\nexport const getImages = async (itemToSearch, dispatchUserEvent) => {\n  debugger;\n  await axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${itemToSearch}&per_page=24&format=json&nojsoncallback=1`).then(response => {\n    // get an array of image-url\n    debugger;\n    let images = response.data.photos.photo.map(photo => {\n      return getFlickrImageURL(photo, 'q');\n    });\n    console.log(images);\n    dispatchUserEvent('SET_ALL_IMAGES', [...images]);\n  });\n};\n\nconst getFlickrImageURL = (photo, size) => {\n  let url = `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}`;\n\n  if (size) {\n    // Configure image size\n    url += `_${size}`;\n  }\n\n  url += '.jpg';\n  return url;\n}; //     .then(response => {\n//         debugger\n//         console.log(response.data.photos.photo)\n//         let images=[]\n//   if (response.data.photos.photo.length > 0) {\n//     images = response.data.photos.photo.map(async(image) => {\n//         let url=\"\"\n//       let server = image.server;\n//       let id = image.id;\n//       let secret = image.secret;\n//       let title = image.title;\n//        url =await `https://live.staticflickr.com/${server}/${id}_${secret}.jpg`;\n// let data={\n//     imageUrl:url,\n//     imageTitle:image.title,\n//     imageId:image.id\n// }\n// return data\n//     });\n//     console.log(images)\n//   }\n//     //   const { data: { photos: { photo } } } = response\n//     //   setImages(photo);\n//     //   setLoading(false);\n//     })\n// .catch(error => {\n//   console.log(\"Encountered an error with fetching and parsing data\", error);\n// });","map":{"version":3,"sources":["/home/pristyncare/Desktop/js/js gallery/src/action/Actions.js"],"names":["axios","useContext","AppContext","apiKey","getImages","itemToSearch","dispatchUserEvent","get","then","response","images","data","photos","photo","map","getFlickrImageURL","console","log","size","url","farm","server","id","secret"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;AAIA,MAAMC,MAAM,GAAC,kCAAb;AACA,OAAO,MAAMC,SAAS,GAAC,OAAMC,YAAN,EAAmBC,iBAAnB,KAAuC;AAC1D;AACD,QAAMN,KAAK,CACTO,GADI,CACC,6EAA4EJ,MAAO,SAAQE,YAAa,2CADzG,EAEJG,IAFI,CAECC,QAAQ,IAAI;AAEhB;AAEA;AACA,QAAIC,MAAM,GAACD,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC,KAArB,CAA2BC,GAA3B,CAAgCD,KAAD,IAAW;AAEnD,aAAOE,iBAAiB,CAACF,KAAD,EAAQ,GAAR,CAAxB;AACD,KAHU,CAAX;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAJ,IAAAA,iBAAiB,CAAC,gBAAD,EAAkB,CAAC,GAAGI,MAAJ,CAAlB,CAAjB;AACD,GAbI,CAAN;AAgBE,CAlBE;;AAmBH,MAAMK,iBAAiB,GAAG,CAACF,KAAD,EAAQK,IAAR,KAAiB;AACvC,MAAIC,GAAG,GAAI,eAAcN,KAAK,CAACO,IAAK,qBAAoBP,KAAK,CAACQ,MAAO,IAAGR,KAAK,CAACS,EAAG,IAC/ET,KAAK,CAACU,MACP,EAFD;;AAGA,MAAIL,IAAJ,EAAU;AACR;AACAC,IAAAA,GAAG,IAAK,IAAGD,IAAK,EAAhB;AACD;;AACDC,EAAAA,GAAG,IAAI,MAAP;AACA,SAAOA,GAAP;AACD,CAVH,C,CAWA;AACJ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA","sourcesContent":["import axios from \"axios\";\n\nimport { useContext } from 'react';\nimport { AppContext } from '../context';\n\n\n\nconst apiKey=\"d158bcf6164dfb926aa8a936e16bc9b8\"\nexport const getImages=async(itemToSearch,dispatchUserEvent)=>{\n    debugger\n   await axios\n    .get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${itemToSearch}&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n    \n      // get an array of image-url\n   \n      debugger\n      let images=response.data.photos.photo.map((photo) => {\n          \n        return getFlickrImageURL(photo, 'q');\n      })\n      console.log(images)\n      dispatchUserEvent('SET_ALL_IMAGES',[...images]);\n    });\n\n\n    }\n    const getFlickrImageURL = (photo, size) => {\n        let url = `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${\n          photo.secret\n        }`;\n        if (size) {\n          // Configure image size\n          url += `_${size}`;\n        }\n        url += '.jpg';\n        return url;\n      };\n    //     .then(response => {\n//         debugger\n//         console.log(response.data.photos.photo)\n//         let images=[]\n\n//   if (response.data.photos.photo.length > 0) {\n//     images = response.data.photos.photo.map(async(image) => {\n//         let url=\"\"\n//       let server = image.server;\n//       let id = image.id;\n//       let secret = image.secret;\n//       let title = image.title;\n//        url =await `https://live.staticflickr.com/${server}/${id}_${secret}.jpg`;\n// let data={\n//     imageUrl:url,\n//     imageTitle:image.title,\n//     imageId:image.id\n// }\n// return data\n      \n//     });\n//     console.log(images)\n//   }\n//     //   const { data: { photos: { photo } } } = response\n//     //   setImages(photo);\n//     //   setLoading(false);\n//     })\n    // .catch(error => {\n    //   console.log(\"Encountered an error with fetching and parsing data\", error);\n    // });\n\n"]},"metadata":{},"sourceType":"module"}